Object Methods - this

A function that is a property of an object is called its method.
Method Shorthand:

user = {
    sayHi() { //same as "sayHi: function(){...}"
        alert("Hello");
    }
};

To access an object, a method can use the THIS keyword.
The value of THIS is the object "before dot", the one used to call the method.

let user = {
  name: "John",
  age: 30,

  sayHi() {
    // "this" is the "current object"
    alert(this.name);
  }

};

user.sayHi(); // John

In Javascript, keyword THIS can be used in any function, even if its not a method of an object. - different than other languages

ARROW FUNCTIONS
arrow functions have no THIS. 

let user = {
    firstName = "Ilya",
    sayHi() {
        let arrow = () => alert(this.firstName);
        arrow();
    }
};

user.sayHi(); //Ilya

Summary
Functions that are stored in object properties are called "methods".
Methods allow objects to "act" like object.doSomething().
Methods can reference the object as THIS.

The value of THIS is defined at run-time.
A function can be copied between objects. 

Ladder Exercise
<!doctype html>
<script src="https://en.js.cx/test/libs.js"></script>
<script src="test.js"></script>
<script>

  let ladder = {
    step: 0,
    up: function() { 
      this.step++;
      return this;
    },
    down: function() { 
      this.step--;
      return this;
    },
    showStep: function() { 
      alert(this.step);
      return this;
    }
  };

</script>

</html>


___________________________________

Creating a Table

<!doctype html>

<meta charset="utf8">

<h1>Mountains</h1>

<div id="mountains"></div>

<script>
  const MOUNTAINS = [
    {name: "Kilimanjaro", height: 5895, place: "Tanzania"},
    {name: "Everest", height: 8848, place: "Nepal"},
    {name: "Mount Fuji", height: 3776, place: "Japan"},
    {name: "Vaalserberg", height: 323, place: "Netherlands"},
    {name: "Denali", height: 6168, place: "United States"},
    {name: "Popocatepetl", height: 5465, place: "Mexico"},
    {name: "Mont Blanc", height: 4808, place: "Italy/France"}
  ];

  function buildTable(data) {
    let table = document.createElement("table");
  
    let fields = Object.keys(data[0]);
    let headRow = document.createElement("tr");
    fields.forEach(function(field) {
      let headCell = document.createElement("th");
      headCell.appendChild(document.createTextNode(field));
      headRow.appendChild(headCell);
    });
    table.appendChild(headRow);

    data.forEach(function(object) {
      let row = document.createElement("tr");
      fields.forEach(function(field) {
        let cell = document.createElement("td");
        cell.appendChild(document.createTextNode(object[field]));
        if (typeof object[field] == "number") {
          cell.style.textAlign = "right";
        }
        row.appendChild(cell);
      });
      table.appendChild(row);
    });

    return table;
  }

  document.querySelector("#mountains")
    .appendChild(buildTable(MOUNTAINS));
</script>